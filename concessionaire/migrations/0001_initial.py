# Generated by Django 4.1.4 on 2023-01-14 20:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Automobile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_shape', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=30)),
                ('mileage', models.FloatField()),
                ('price', models.FloatField()),
                ('model', models.CharField(max_length=30)),
                ('year', models.CharField(max_length=30)),
                ('id_vehicle', models.IntegerField()),
                ('in_promotion', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('details', models.TextField()),
                ('range', models.CharField(choices=[('High-end', 'High-end'), ('Mid-range', 'Mid-range'), ('Low end', 'Low end')], default='Low end', max_length=10)),
                ('plates', models.CharField(max_length=50)),
                ('picture_main', models.ImageField(upload_to='automobile/')),
                ('picture_front', models.ImageField(upload_to='automobile/')),
                ('picture_back', models.ImageField(upload_to='automobile/')),
                ('picture_profile', models.ImageField(upload_to='automobile/')),
                ('picture_motor', models.ImageField(upload_to='automobile/')),
                ('picture_dashboard', models.ImageField(upload_to='automobile/')),
                ('color', models.CharField(max_length=50)),
                ('main_collage', models.ImageField(upload_to='automobile/')),
                ('capacity', models.IntegerField()),
                ('transmission', models.CharField(choices=[('Manual', 'Manual'), ('Auto', 'Auto')], default='Manual', max_length=20)),
                ('horsepower', models.CharField(max_length=50)),
                ('airbag', models.BooleanField(default=False)),
                ('traction', models.CharField(choices=[('4X2', '4X2'), ('4X4', '4X4')], default='4X2', max_length=50)),
                ('electric_parking_brake', models.BooleanField(default=False)),
                ('electric_glasses', models.BooleanField(default=False)),
                ('electric_mirrors', models.BooleanField(default=False)),
                ('air_conditioner', models.BooleanField(default=False)),
                ('reverse_camera', models.BooleanField(default=False)),
                ('reversing_sensors', models.CharField(max_length=100)),
                ('electronic_stability_control', models.BooleanField(default=False)),
                ('ascent_and_descent_control', models.BooleanField(default=False)),
                ('data_sheet', models.FileField(upload_to='data_sheets/')),
                ('forward_collision_alert', models.BooleanField(default=False)),
                ('involuntary_lane_departure_alert', models.BooleanField(default=False)),
                ('ABS', models.BooleanField(default=False)),
                ('fuel', models.CharField(choices=[('Gasoline', 'Gasoline'), ('Electric', 'Electric'), ('Hibrid', 'Hibrid')], default='Manual', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('automobile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='concessionaire.automobile')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='concessionaire.business')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('durations', models.TimeField()),
                ('new_price', models.FloatField()),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='concessionaire.inventory')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_employee', models.IntegerField(default=0)),
                ('phone', models.CharField(max_length=20)),
                ('token', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('business', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='concessionaire.business')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
